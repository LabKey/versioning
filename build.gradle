buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.8.1"
    }
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'

ext {
    jgitVersion = '5.6.0.201912101111-r'
}

repositories {
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.ajoberstar.grgit:grgit-core:4.0.1'
    compile "org.eclipse.jgit:org.eclipse.jgit.ui:${jgitVersion}"
    compile "org.eclipse.jgit:org.eclipse.jgit:${jgitVersion}"
    compile 'org.tmatesoft.svnkit:svnkit:1.8.12'
    testCompile "junit:junit:4.12"
    testCompile "commons-lang:commons-lang:2.6"
    testCompile "commons-io:commons-io:2.5"
}

project.version = "1.0.3-SNAPSHOT"

/**
 * Plug-in publication
 */
publishing {
    publications {
        mavenJava (MavenPublication) {
            groupId 'org.labkey.build'
            artifactId 'versioning'
            from components.java
        }
    }
}

if (project.hasProperty('doPublishing') && project.hasProperty('artifactory_contextUrl') && project.hasProperty('artifactory_user') && project.hasProperty('artifactory_password'))
{
    apply plugin: 'com.jfrog.artifactory'
    artifactory {
        contextUrl = "${artifactory_contextUrl}"
        publish {
            repository {
                repoKey = project.version.endsWith('-SNAPSHOT') ? 'plugins-snapshot-local' : "plugins-release-local"
                username = "${artifactory_user}"
                password = "${artifactory_password}"
                maven = true
            }
            defaults {
                publications ('mavenJava')
                publishPom = true
                publishIvy = false
            }
        }
        resolve {
            repository {
                repoKey = project.version.endsWith('-SNAPSHOT') ? 'plugins-snapshot-local' : "plugins-release"
            }
        }
    }
}

test {
    ignoreFailures = true

    //Skips all tests
    exclude "**/*.class"

    environment "GIT_TEST_BRANCH", "feature/456-cute"
    environment "SVN_TEST_BRANCH", "feature-456-cute"
}
